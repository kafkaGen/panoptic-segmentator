name: Build on DockerHub and Deploy to AWS EC2
on:
  push:
    branches:
      - master
jobs:
  pre-commit:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit flake8-pyproject
          pre-commit install
          pre-commit autoupdate
          python -m pip install types-PyYAML types-requests
      - name: Run pre-commit
        run: pre-commit run --all-files
      
  # build:
  #   needs: pre-commit
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./
  #         push: true
  #         dockerfile: ./Dockerfile
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
  deploy:
    # needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest ${{ github.event.repository.name }}:latest'
      - name: Extract docker compose configuration
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker run -it -d --name temp ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest ls'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker cp  temp:/app/docker-compose-cpu.yml ./'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker stop temp || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker rm temp || true'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker stop ${{ github.event.repository.name }} || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker rm ${{ github.event.repository.name }} || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker-compose -f docker-compose-cpu.yml up -d'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} 'sudo docker image prune -f'
